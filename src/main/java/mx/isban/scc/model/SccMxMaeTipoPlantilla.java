package mx.isban.scc.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Tabla para los tipos de plantillas que el usuario
 * maneja en la simulacion. 
 * Los ID siempre serán los mismos ya que el idPlantilla se ocupa como
 * foreign key en las tablas que usa el simulador
 * para descargar los PDF correspondientes a las mismas
 * Generado por GlobalHitss Mayo 2019 Sprint
 * 3 SccMxMaeTipoProd generated by hbm2java
 */
@Entity
@Table(name = "SCC_MX_MAE_TIPO_PLANTILLA")
public class SccMxMaeTipoPlantilla implements IAbstractEntity, java.io.Serializable {

	/**
	 * Serial para el tipo de plantilla
	 */
	private static final long serialVersionUID = -7765417359092226441L;
	/**
	 * LLave primaria tipo de plantilla
	 */
	private Long idTipoPlantillaPk;
	/**
	 * Descripción de tipo de plantilla puede ser
	 * Carta Compromiso, Mandatorio, Tabla de Amortizacion etc
	 */
	private String dscTipoPlantilla;


	/**
	 * El campo id de la tabla
	 * @return el valor del id de la tabla
	 */
	@Id
	@Column(name = "ID_TIPO_PLANTILLA_PK", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getIdTipoPlantillaPk() {
		return idTipoPlantillaPk;
	}

	/**
	 * Inicializa el campo id de la tabla
	 * @param idTipoPlantillaPk el valor del id a inicializar
	 */
	public void setIdTipoPlantillaPk(Long idTipoPlantillaPk) {
		this.idTipoPlantillaPk = idTipoPlantillaPk;
	}

	/**
	 * Obtiene la descripción del tipo de plantilla
	 * @return la descripción del tipo de plantilla
	 */
	@Column(name = "DSC_TIPO_PLANTILLA", nullable = false, length = 100)
	public String getDscTipoPlantilla() {
		return dscTipoPlantilla;
	}

	/**
	 * Inicializa la descripción del tipo de plantilla
	 * @param dscTipoPlantilla la descripción del tipo de plantilla
	 */
	public void setDscTipoPlantilla(String dscTipoPlantilla) {
		this.dscTipoPlantilla = dscTipoPlantilla;
	}

}
